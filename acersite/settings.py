"""
Django settings for acersite project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
# Add this to __init__.py in your main project folder


import pymysql
import os
from dotenv import load_dotenv

import cloudinary
import cloudinary.uploader
import cloudinary.api


pymysql.install_as_MySQLdb()
<<<<<<< HEAD

=======
>>>>>>> 9d4b25993e98eb870d64c3edd4e458f64b68c162

load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

<<<<<<< HEAD
#Production
load_dotenv(os.path.join(BASE_DIR, '.env'))
=======

# load_dotenv(os.path.join(BASE_DIR, '.env'))
>>>>>>> 9d4b25993e98eb870d64c3edd4e458f64b68c162

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-ap+99+)fv@p367h23!(q^iw(dhodop^$6(wf-!_ikf_95suclq'

# Production
<<<<<<< HEAD
# '''
SECRET_KEY = os.environ.get('SECRET_KEY')
# '''
=======
SECRET_KEY = os.environ.get('SECRET_KEY')
>>>>>>> 9d4b25993e98eb870d64c3edd4e458f64b68c162

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
DEBUG =False

<<<<<<< HEAD
#for Production
'''
ALLOWED_HOSTS =  os.getenv("DJANGO_ALLOWED_HOSTS", "").split(",")
CSRF_TRUSTED_ORIGINS =['https://www.acerbiomedicals.com']
'''
=======
#for production
>>>>>>> 9d4b25993e98eb870d64c3edd4e458f64b68c162
ALLOWED_HOSTS = ['*']
#for the localhost
# ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
    'cloudinary',
    'cloudinary_storage',
    'whitenoise.runserver_nostatic'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'acersite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'core.views.base',
            ],
        },
    },
]


WSGI_APPLICATION = 'acersite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

<<<<<<< HEAD
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'acer_db',
#         'USER':'root',
#         'PASSWORD':os.environ.get('LOCAL_DB_PASSWORD'),
#         'HOST':'localhost',
#         'PORT':'3306',
#     }
# }
=======

>>>>>>> 9d4b25993e98eb870d64c3edd4e458f64b68c162
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'railway',
        'USER': 'postgres',
        #production
        'PASSWORD': os.environ.get('DB_PASSWORD'),

        'HOST': 'crossover.proxy.rlwy.net',

        'PORT': '52079',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'  
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')  
    ]

# whitenoise static stuff
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
STATIC_ROOT =BASE_DIR / 'staticfiles'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



CLOUDINARY_STORAGE = {
    'CLOUD_NAME': os.getenv('CLOUDINARY_CLOUD_NAME'),
    'API_KEY': os.getenv('CLOUDINARY_API_KEY'),
    'API_SECRET': os.getenv('CLOUDINARY_API_SECRET'),
}

DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'




SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
X_FRAME_OPTIONS = 'DENY'